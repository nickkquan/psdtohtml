html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*::after,*::before{-webkit-box-sizing:inherit;box-sizing:inherit}@font-face{font-family:"tradeGothic"}*,*::after,*::before{margin:0;padding:0;-webkit-box-sizing:inherit;box-sizing:inherit}html{font-size:62.5%}body{-webkit-box-sizing:border-box;box-sizing:border-box;background-color:#1d1d1d;height:100vh;width:100vw}body{font-family:"Arial", sans-serif;color:#9f9f9f}.navigation{padding:0 2rem;background-color:rgba(0,0,0,0.75);width:100%;position:fixed;z-index:5}.navigation-bar{padding:0.8rem 0;list-style-type:none;min-height:6rem;width:80%;margin:auto}.navigation-bar .envoy-logo{text-decoration:none;text-transform:uppercase;color:#9f9f9f;font-family:tradeGothic;font-size:3.2rem;line-height:0.8rem}.navigation-bar li{float:left}.navigation-bar li.logo-container.navigation-link{top:1.8rem;position:relative}.navigation-bar li.navigation-link{top:2.1rem;position:relative}.navigation-bar li a:not(.envoy-logo){padding:0 0 0 2.5rem;margin:0;display:inline-block;color:#ffffff;-webkit-transition:0.25s;transition:0.25s;text-decoration:none;font-weight:bold;font-size:1.2rem}.navigation-bar li a:not(.envoy-logo):hover{color:#e34d33}.navigation-bar li.twitter-button{float:right}.navigation-bar li.twitter-button img{position:relative;bottom:-1.2rem}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
