@font-face{font-family:"tradeGothic";font-style:normal;font-weight:".ttf";src:url("../fonts/tradegothic.eot?#iefix") format("embedded-opentype"),url("../fonts/tradegothic.woff2") format("woff2"),url("../fonts/tradegothic.woff") format("woff"),url("../fonts/tradegothic.ttf") format("truetype"),url("../fonts/tradegothic.svg#tradeGothic") format("svg")}*,*::after,*::before{margin:0;padding:0;-webkit-box-sizing:inherit;box-sizing:inherit}html{font-size:62.5%}body{-webkit-box-sizing:border-box;box-sizing:border-box;background-color:#1d1d1d;height:100vh;width:100vw}body{font-family:"Arial", sans-serif;color:#9f9f9f}.navigation{padding:0 2rem;background-color:rgba(0,0,0,0.75);width:100%;z-index:5}.navigation-bar{padding:0.8rem 0;list-style-type:none;min-height:6rem;width:80%;margin:auto}.navigation-bar .envoy-logo{text-decoration:none;text-transform:uppercase;color:#9f9f9f;font-family:tradeGothic;font-size:3.2rem;line-height:0.8rem}.navigation-bar li{float:left}.navigation-bar li.logo-container.navigation-link{top:1.8rem;position:relative}.navigation-bar li.navigation-link{top:2.1rem;position:relative}.navigation-bar li a:not(.envoy-logo){padding:0 0 0 2.5rem;margin:0;display:inline-block;color:#ffffff;-webkit-transition:0.25s;transition:0.25s;text-decoration:none;font-weight:bold;font-size:1.2rem}.navigation-bar li a:not(.envoy-logo):hover{color:#e34d33}.navigation-bar li a:not(.envoy-logo):visited{color:#9f9f9f}.navigation-bar li.twitter-button{float:right}.navigation-bar li.twitter-button img{position:relative;bottom:-1.2rem}.about{width:80%;height:60%;margin:auto}.about::after{clear:both;content:"";display:block}.about__tagline::after{clear:both;content:"";display:block}.about__tagline h2{width:calc(100% - 40px);float:left;margin-left:20px;padding:0 0 2.5rem;color:#ffffff;line-height:3rem;font-size:3.5rem;border-bottom:5px solid #282828}.about__tagline span{color:#e34d33}.about__featured-work::after{clear:both;content:"";display:block}.about__the-wire::after{clear:both;content:"";display:block}.about__featured-work--title,.about__the-wire--title{margin:0 0 2rem;font-size:1.2rem;font-weight:bold;color:#9f9f9f}.about__featured-work--title p,.about__the-wire--title p{padding:0 0 1.5rem;margin:2rem 0;width:calc(100% - 40px);float:left;margin-left:20px;border-bottom:1px solid #282828}.about__featured-work--title a,.about__the-wire--title a{padding:0 0 0 0.5rem;font-size:1.2rem;color:#e34d33;text-decoration:none}.about__featured-work--title a:hover,.about__the-wire--title a:hover{color:#ffffff;-webkit-transition:0.25s;transition:0.25s}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
